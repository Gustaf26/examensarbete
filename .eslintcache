[{"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\index.js":"1","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\App.js":"2","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\AuthRoute.js":"3","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Login.js":"4","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Home.js":"5","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Logout.js":"6","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\ForgotPassword.js":"7","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\NotFound.js":"8","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Navigation.js":"9","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Signup.js":"10","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\UpdateProfile.js":"11","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\contexts\\AuthContext.js":"12","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\firebase\\index.js":"13","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\Product.js":"14","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\CreateProduct.js":"15","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\Products.js":"16","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\ProductsGrid.js":"17","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useAlbum.js":"18","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useUploadImage.js":"19","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useDeleteProduct.js":"20","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\UploadImageDropzone.js":"21","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\contexts\\CreateContext.js":"22","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\AdminRoute.js":"23","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useProducts.js":"24","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\UpdateProduct.js":"25"},{"size":241,"mtime":1608315457684,"results":"26","hashOfConfig":"27"},{"size":3713,"mtime":1608315735916,"results":"28","hashOfConfig":"27"},{"size":329,"mtime":1608265820219,"results":"29","hashOfConfig":"27"},{"size":3595,"mtime":1608046915849,"results":"30","hashOfConfig":"27"},{"size":1531,"mtime":1608316939482,"results":"31","hashOfConfig":"27"},{"size":754,"mtime":1607520182081,"results":"32","hashOfConfig":"27"},{"size":1659,"mtime":1607520182070,"results":"33","hashOfConfig":"27"},{"size":154,"mtime":1607354163657,"results":"34","hashOfConfig":"27"},{"size":3369,"mtime":1608292420147,"results":"35","hashOfConfig":"27"},{"size":2137,"mtime":1607354163659,"results":"36","hashOfConfig":"27"},{"size":3022,"mtime":1607520182090,"results":"37","hashOfConfig":"27"},{"size":2209,"mtime":1608032671657,"results":"38","hashOfConfig":"27"},{"size":923,"mtime":1607967406386,"results":"39","hashOfConfig":"27"},{"size":3535,"mtime":1608317083556,"results":"40","hashOfConfig":"27"},{"size":5052,"mtime":1608265820231,"results":"41","hashOfConfig":"27"},{"size":1004,"mtime":1608267159988,"results":"42","hashOfConfig":"27"},{"size":3716,"mtime":1608293292230,"results":"43","hashOfConfig":"27"},{"size":1035,"mtime":1607955446201,"results":"44","hashOfConfig":"27"},{"size":1507,"mtime":1608212195266,"results":"45","hashOfConfig":"27"},{"size":769,"mtime":1608041882011,"results":"46","hashOfConfig":"27"},{"size":2625,"mtime":1608212195260,"results":"47","hashOfConfig":"27"},{"size":1153,"mtime":1608268747344,"results":"48","hashOfConfig":"27"},{"size":326,"mtime":1608266055615,"results":"49","hashOfConfig":"27"},{"size":836,"mtime":1608267577800,"results":"50","hashOfConfig":"27"},{"size":5052,"mtime":1608293355225,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eltx4h",{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\index.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\App.js",["112"],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\AuthRoute.js",[],["113","114"],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Login.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Home.js",["115"],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Logout.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\ForgotPassword.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\NotFound.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Navigation.js",["116"],"/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Container,\r\n  Form,\r\n  Row,\r\n  FormControl,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport logo from \"../assets/images/logo.svg\";\r\n\r\nconst Navigation = () => {\r\n  const { currentUser, admin } = useAuth();\r\n  const [createLink, setCreate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (admin === true) {\r\n      setCreate(true);\r\n    } else {\r\n      setCreate(false);\r\n    }\r\n  }, [admin]);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"info\" variant=\"dark\">\r\n        <Container>\r\n          <Row className=\"justify-content-end py-3 m-left-3\" lg={12}>\r\n            <Link to=\"/\" className=\"navbar-brand m-left-3\">\r\n              <img\r\n                alt=\"A photo album\"\r\n                src={logo}\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n              />{\" \"}\r\n              Work Out\r\n            </Link>\r\n            <Col lg={8}>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Form inline>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Search\"\r\n                    className=\"mr-sm-1 ml-5 pr-lg-5\"\r\n                  />\r\n                </Form>\r\n                <Nav className=\"ml-auto\">\r\n                  {createLink === true ? (\r\n                    <NavLink\r\n                      to=\"/create\"\r\n                      className=\"mx-4 my-auto\"\r\n                      variant=\"dark\"\r\n                    >\r\n                      Create\r\n                    </NavLink>\r\n                  ) : null}\r\n                  <NavDropdown title=\"All clothes\" id=\"basic-nav-dropdown\">\r\n                    <NavLink to=\"/products/troussers\" className=\"dropdown-item\">\r\n                      Troussers\r\n                    </NavLink>\r\n                    <NavLink to=\"/products/jackets\" className=\"dropdown-item\">\r\n                      Jackets\r\n                    </NavLink>\r\n                    <NavLink to=\"/products/t-shirts\" className=\"dropdown-item\">\r\n                      T-shirts\r\n                    </NavLink>\r\n                  </NavDropdown>\r\n                  {currentUser ? (\r\n                    <NavDropdown\r\n                      title={currentUser.displayName || currentUser.email}\r\n                      id=\"basic-nav-dropdown\"\r\n                    >\r\n                      <NavLink to=\"/update-profile\" className=\"dropdown-item\">\r\n                        Update Profile\r\n                      </NavLink>\r\n                      <NavDropdown.Divider />\r\n                      <NavLink to=\"/logout\" className=\"dropdown-item\">\r\n                        Log Out\r\n                      </NavLink>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <NavLink to=\"/login\" className=\"nav-link\">\r\n                      Login\r\n                    </NavLink>\r\n                  )}\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Signup.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\UpdateProfile.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\contexts\\AuthContext.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\firebase\\index.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\Product.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\CreateProduct.js",["117","118"],"import React, { useState } from \"react\";\r\nimport UploadImageDropzone from \"./UploadImageDropzone\";\r\nimport { Row, Col, Card, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useCreate } from \"../../contexts/CreateContext\";\r\n\r\nconst CreateProduct = () => {\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [prodPrice, setPrice] = useState(\"\");\r\n  const { currentUser } = useAuth();\r\n  const {\r\n    imageUrl,\r\n    productOption,\r\n    setProductOption,\r\n    setSingleProduct,\r\n  } = useCreate();\r\n  const navigate = useNavigate();\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handlePrice = (e) => {\r\n    const newPrice = e.target.value;\r\n    setPrice(newPrice);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name.length < 4 || description < 20 || !productOption) {\r\n      setError(\"You are missing some of the required upload parameters\");\r\n      return;\r\n    }\r\n\r\n    setError(false);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const ranNumber = Math.floor(Math.random() * 10000);\r\n\r\n      const docRef = db.collection(`${productOption}`).doc(`${ranNumber}`).set({\r\n        name: name,\r\n        description: description,\r\n        thumbnail: imageUrl,\r\n        price: prodPrice,\r\n        id: ranNumber,\r\n      });\r\n\r\n      db.collection(`${productOption}`)\r\n        .doc(`${ranNumber}`)\r\n        .get()\r\n        .then((doc) => {\r\n          setSingleProduct(doc.data());\r\n          setTimeout(() => {\r\n            navigate(`/products/${productOption}/${ranNumber}`);\r\n          }, 1000);\r\n        });\r\n    } catch (e) {\r\n      setError(e.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={{ span: 6, offset: 3 }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Create a product entry</Card.Title>\r\n\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"title\">\r\n                  <Form.Label>Product name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"title\"\r\n                    onChange={handleNameChange}\r\n                    value={name}\r\n                    required\r\n                  />\r\n                  {name && name.length < 4 && (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Please enter a name at least 4 characters long.\r\n                    </Form.Text>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group id=\"description\">\r\n                  <Form.Label>Description</Form.Label>\r\n                  <Form.Control\r\n                    type=\"title\"\r\n                    onChange={handleDescriptionChange}\r\n                    value={description}\r\n                    required\r\n                  />\r\n                  {description && description.length < 20 && (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Please enter a description at least 20 characters long.\r\n                    </Form.Text>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                  <Form.Label>Choose product category</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    required\r\n                    multiple\r\n                    onClick={(e) =>\r\n                      setProductOption(e.target.value.toLowerCase())\r\n                    }\r\n                  >\r\n                    <option>Troussers</option>\r\n                    <option>Jackets</option>\r\n                    <option>T-shirts</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group id=\"price\">\r\n                  <Form.Label>Price</Form.Label>\r\n                  <Form.Control\r\n                    type=\"title\"\r\n                    onChange={handlePrice}\r\n                    value={prodPrice}\r\n                    required\r\n                  />\r\n                  {prodPrice && prodPrice === \"0\" && (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Please set the product price.\r\n                    </Form.Text>\r\n                  )}\r\n                </Form.Group>\r\n                {productOption && <UploadImageDropzone type={productOption} />}\r\n                <Button disabled={loading} type=\"submit\" className=\"mx-auto\">\r\n                  Create\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\Products.js",["119","120"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport useProducts from \"../../hooks/useProducts\";\r\nimport ProductsGrid from \"./ProductsGrid\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\n\r\nconst Products = ({ type }) => {\r\n  const { currentUser } = useAuth();\r\n  const { products, loading } = useProducts(type);\r\n\r\n  return (\r\n    <>\r\n      {/* <p className=\"mb-3\">\r\n        All Clothes - {!loading && products && <span>{type}</span>}\r\n      </p> */}\r\n      <Breadcrumb className=\"mb-3\">\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/\">Home</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item active>{type}</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n\r\n      {loading ? (\r\n        <BounceLoader color={\"#888\"} size={20} />\r\n      ) : (\r\n        <ProductsGrid type={type} products={products} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\ProductsGrid.js",["121","122","123","124"],"//import firebase from \"firebase/app\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useCreate } from \"../../contexts/CreateContext\";\r\nimport { db } from \"../../firebase\";\r\n\r\nconst ProductsGrid = ({ products, type }) => {\r\n  const descriptionItems = useRef([]);\r\n  const navigate = useNavigate();\r\n  const { currentUser, admin } = useAuth();\r\n  const { setSingleProduct, setProductOption } = useCreate();\r\n\r\n  const handleUpdateProduct = (product) => {\r\n    navigate(`/update`);\r\n  };\r\n\r\n  const handleDeleteProduct = (product) => {\r\n    try {\r\n      const deletion = async () => {\r\n        console.log(\"ddeleteing \" + product.name);\r\n\r\n        db.collection(`${type}`).doc(`${product.id}`).delete();\r\n      };\r\n\r\n      deletion();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const showDescription = (item) => {\r\n    console.log(item);\r\n  };\r\n\r\n  return (\r\n    <SRLWrapper>\r\n      <Row className=\"my-3\" onLoad={() => setProductOption(type)}>\r\n        {products &&\r\n          products.map((item, index) => (\r\n            <Col sm={6} md={4} lg={3} key={item.id}>\r\n              <Card className=\"mb-3\">\r\n                <a\r\n                  href={item.thumbnail}\r\n                  title=\"View image in lightbox\"\r\n                  data-attribute=\"SRL\"\r\n                >\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={item.thumbnail}\r\n                    title={item.name}\r\n                  />\r\n                </a>\r\n                <Card.Body\r\n                  className=\"d-block\"\r\n                  onClick={() => setSingleProduct(item)}\r\n                >\r\n                  {\" \"}\r\n                  <Link to={`/products/${type}/${item.id}`}>\r\n                    <Card.Text className=\"text-muted small\">\r\n                      <b>{item.name}</b>\r\n                    </Card.Text>\r\n                    <Card.Text className=\"text-muted small\">\r\n                      <b>Price: </b> {item.price} €\r\n                    </Card.Text>\r\n                    <Card.Text className=\"text-muted small\">\r\n                      <b>Description: </b>{\" \"}\r\n                      <span ref={descriptionItems[index]}>\r\n                        {item.description.slice(0, 100)}... <b>(Read more)</b>\r\n                        {/* <b onClick={() => showDescription(item)}>(Read more)</b> */}\r\n                      </span>\r\n                    </Card.Text>\r\n                  </Link>\r\n                  {admin && (\r\n                    <div>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        size=\"sm\"\r\n                        className=\"col-5 mt-3 ml-3 p-2\"\r\n                        onClick={() => {\r\n                          handleDeleteProduct(item);\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"secondary\"\r\n                        size=\"sm\"\r\n                        className=\"col-5 mt-3 ml-2 p-2\"\r\n                        onClick={() => {\r\n                          handleUpdateProduct(item);\r\n                        }}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </SRLWrapper>\r\n  );\r\n};\r\n\r\nexport default ProductsGrid;\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useAlbum.js",[],["125","126"],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useUploadImage.js",["127"],"import { useState, useEffect } from \"react\";\r\nimport { storage } from \"../firebase\";\r\nimport { useCreate } from \"../contexts/CreateContext\";\r\n\r\nconst useUploadImage = ({ file }) => {\r\n  const [uploadProgress, setUploadProgress] = useState(null);\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const { setImageUrl, productOption } = useCreate();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      setUploadProgress(null);\r\n      setUploadedImage(null);\r\n      setError(null);\r\n      setIsSuccess(false);\r\n\r\n      return;\r\n    }\r\n\r\n    // reset environment\r\n    setError(null);\r\n    setIsSuccess(false);\r\n\r\n    // get file reference\r\n    const fileRef = storage.ref(`${productOption}/${file.name}`);\r\n\r\n    // upload file to fileRef\r\n    const uploadTask = fileRef.put(file);\r\n\r\n    // attach listener for `state_changed`-event\r\n    uploadTask.on(\"state_changed\", (taskSnapshot) => {\r\n      setUploadProgress(\r\n        Math.round(\r\n          (taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100\r\n        )\r\n      );\r\n    });\r\n\r\n    // are we there yet?\r\n    uploadTask.then((snapshot) => {\r\n      // retrieve URL to uploaded file\r\n      snapshot.ref.getDownloadURL().then((url) => {\r\n        // add uploaded file to db\r\n        setImageUrl(url);\r\n      });\r\n    });\r\n  }, [file]);\r\n\r\n  return { uploadProgress, uploadedImage, error, isSuccess };\r\n};\r\n\r\nexport default useUploadImage;\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useDeleteProduct.js",["128","129","130"],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\UploadImageDropzone.js",["131","132","133","134"],"import React, { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport ProgressBar from \"react-bootstrap/esm/ProgressBar\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport useUploadImage from \"../../hooks/useUploadImage\";\r\nimport { useCreate } from \"../../contexts/CreateContext\";\r\n\r\nconst UploadImageDropzone = ({ type }) => {\r\n  const [uploadFile, setUploadFile] = useState({ file: \"\", type: \"\" });\r\n  const [message, setMessage] = useState(null);\r\n  const { imageUrl } = useCreate();\r\n  const { uploadProgress, error, isSuccess } = useUploadImage(uploadFile);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      setMessage({\r\n        error: true,\r\n        text: error,\r\n      });\r\n    } else if (isSuccess) {\r\n      setMessage({\r\n        success: true,\r\n        text: \"Image successfully uploaded!\",\r\n      });\r\n    } else {\r\n      setMessage(null);\r\n    }\r\n  }, [error, isSuccess]);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setMessage(null);\r\n\r\n    if (acceptedFiles.length === 0) {\r\n      return;\r\n    }\r\n\r\n    setUploadFile({\r\n      file: acceptedFiles[0],\r\n      type: type,\r\n    });\r\n  }, []);\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    acceptedFiles,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    accept: \"image/gif, image/jpeg, image/png\",\r\n    onDrop,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      id=\"upload-image-dropzone-wrapper\"\r\n      className={`text-center px-4 py-3 my-3 ${\r\n        isDragAccept ? `drag-accept` : ``\r\n      } ${isDragReject ? `drag-reject` : ``}`}\r\n    >\r\n      <input type=\"image\" {...getInputProps()} />\r\n      {isDragActive ? (\r\n        isDragAccept ? (\r\n          <p>Drop image</p>\r\n        ) : (\r\n          <p>File not allowed</p>\r\n        )\r\n      ) : (\r\n        <p>Drop here product picture</p>\r\n      )}\r\n      {acceptedFiles && (\r\n        <div className=\"accepted-files mt-2\">\r\n          <ul className=\"list-unstyled\">\r\n            {acceptedFiles.map((file) => (\r\n              <li key={file.name}>\r\n                {file.name} ({Math.round(file.size / 1024)} kb)\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {/* Output upload status */}\r\n      {uploadProgress !== null && uploadProgress !== 100 && (\r\n        <ProgressBar variant=\"success\" animated now={uploadProgress} />\r\n      )}\r\n\r\n      {message && (\r\n        <Alert variant={message.error ? \"warning\" : \"success\"}>\r\n          {message.text}\r\n        </Alert>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImageDropzone;\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\contexts\\CreateContext.js",["135","136","137"],"//import { db } from \"../firebase\";\r\nimport { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { BounceLoader } from \"react-spinners\";\r\n\r\nconst CreateContext = createContext();\r\n\r\nconst useCreate = () => {\r\n  return useContext(CreateContext);\r\n};\r\n\r\nconst CreateContextProvider = (props) => {\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [productOption, setProductOption] = useState(null);\r\n  const [singleProduct, setSingleProduct] = useState(\"\");\r\n  const [productCategories, setCategories] = useState([]);\r\n\r\n  const contextValues = {\r\n    setImageUrl,\r\n    imageUrl,\r\n    setProductOption,\r\n    productOption,\r\n    setSingleProduct,\r\n    singleProduct,\r\n    productCategories,\r\n  };\r\n\r\n  return (\r\n    <CreateContext.Provider value={contextValues}>\r\n      {loading && (\r\n        <div className=\"d-flex justify-content-center my-5\">\r\n          <BounceLoader color={\"#888\"} size={100} />\r\n        </div>\r\n      )}\r\n      {!loading && props.children}\r\n    </CreateContext.Provider>\r\n  );\r\n};\r\n\r\nexport { CreateContext, useCreate, CreateContextProvider as default };\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\AdminRoute.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useProducts.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\UpdateProduct.js",["138","139"],"import React, { useState } from \"react\";\r\nimport UploadImageDropzone from \"./UploadImageDropzone\";\r\nimport { Row, Col, Card, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useCreate } from \"../../contexts/CreateContext\";\r\n\r\nconst UpdateProduct = () => {\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [prodPrice, setPrice] = useState(\"\");\r\n  const { currentUser } = useAuth();\r\n  const {\r\n    imageUrl,\r\n    productOption,\r\n    setProductOption,\r\n    setSingleProduct,\r\n  } = useCreate();\r\n  const navigate = useNavigate();\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handlePrice = (e) => {\r\n    const newPrice = e.target.value;\r\n    setPrice(newPrice);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name.length < 4 || description < 20 || !productOption) {\r\n      setError(\"You are missing some of the required upload parameters\");\r\n      return;\r\n    }\r\n\r\n    setError(false);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const ranNumber = Math.floor(Math.random() * 10000);\r\n\r\n      const docRef = db.collection(`${productOption}`).doc(`${ranNumber}`).set({\r\n        name: name,\r\n        description: description,\r\n        thumbnail: imageUrl,\r\n        price: prodPrice,\r\n        id: ranNumber,\r\n      });\r\n\r\n      db.collection(`${productOption}`)\r\n        .doc(`${ranNumber}`)\r\n        .get()\r\n        .then((doc) => {\r\n          setSingleProduct(doc.data());\r\n          setTimeout(() => {\r\n            navigate(`/products/${productOption}/${ranNumber}`);\r\n          }, 1000);\r\n        });\r\n    } catch (e) {\r\n      setError(e.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={{ span: 6, offset: 3 }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Update a product entry</Card.Title>\r\n\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"title\">\r\n                  <Form.Label>Product name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"title\"\r\n                    onChange={handleNameChange}\r\n                    value={name}\r\n                    required\r\n                  />\r\n                  {name && name.length < 4 && (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Please enter a name at least 4 characters long.\r\n                    </Form.Text>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group id=\"description\">\r\n                  <Form.Label>Description</Form.Label>\r\n                  <Form.Control\r\n                    type=\"title\"\r\n                    onChange={handleDescriptionChange}\r\n                    value={description}\r\n                    required\r\n                  />\r\n                  {description && description.length < 20 && (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Please enter a description at least 20 characters long.\r\n                    </Form.Text>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                  <Form.Label>Choose product category</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    required\r\n                    multiple\r\n                    onClick={(e) =>\r\n                      setProductOption(e.target.value.toLowerCase())\r\n                    }\r\n                  >\r\n                    <option>Troussers</option>\r\n                    <option>Jackets</option>\r\n                    <option>T-shirts</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group id=\"price\">\r\n                  <Form.Label>Price</Form.Label>\r\n                  <Form.Control\r\n                    type=\"title\"\r\n                    onChange={handlePrice}\r\n                    value={prodPrice}\r\n                    required\r\n                  />\r\n                  {prodPrice && prodPrice === \"0\" && (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Please set the product price.\r\n                    </Form.Text>\r\n                  )}\r\n                </Form.Group>\r\n                {productOption && <UploadImageDropzone type={productOption} />}\r\n                <Button disabled={loading} type=\"submit\" className=\"mx-auto\">\r\n                  Create\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n",{"ruleId":"140","severity":1,"message":"141","line":21,"column":33,"nodeType":"142","messageId":"143","endLine":21,"endColumn":42},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"140","severity":1,"message":"148","line":6,"column":11,"nodeType":"142","messageId":"143","endLine":6,"endColumn":22},{"ruleId":"140","severity":1,"message":"149","line":2,"column":38,"nodeType":"142","messageId":"143","endLine":2,"endColumn":44},{"ruleId":"140","severity":1,"message":"148","line":15,"column":11,"nodeType":"142","messageId":"143","endLine":15,"endColumn":22},{"ruleId":"140","severity":1,"message":"150","line":51,"column":13,"nodeType":"142","messageId":"143","endLine":51,"endColumn":19},{"ruleId":"140","severity":1,"message":"151","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"148","line":10,"column":11,"nodeType":"142","messageId":"143","endLine":10,"endColumn":22},{"ruleId":"140","severity":1,"message":"152","line":2,"column":17,"nodeType":"142","messageId":"143","endLine":2,"endColumn":25},{"ruleId":"140","severity":1,"message":"151","line":2,"column":35,"nodeType":"142","messageId":"143","endLine":2,"endColumn":44},{"ruleId":"140","severity":1,"message":"148","line":13,"column":11,"nodeType":"142","messageId":"143","endLine":13,"endColumn":22},{"ruleId":"140","severity":1,"message":"153","line":34,"column":9,"nodeType":"142","messageId":"143","endLine":34,"endColumn":24},{"ruleId":"144","replacedBy":"154"},{"ruleId":"146","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":49,"column":6,"nodeType":"158","endLine":49,"endColumn":12,"suggestions":"159"},{"ruleId":"140","severity":1,"message":"160","line":2,"column":14,"nodeType":"142","messageId":"143","endLine":2,"endColumn":21},{"ruleId":"156","severity":1,"message":"161","line":9,"column":6,"nodeType":"158","endLine":9,"endColumn":8,"suggestions":"162"},{"ruleId":"156","severity":1,"message":"163","line":30,"column":6,"nodeType":"158","endLine":30,"endColumn":15,"suggestions":"164"},{"ruleId":"140","severity":1,"message":"165","line":1,"column":51,"nodeType":"142","messageId":"143","endLine":1,"endColumn":61},{"ruleId":"140","severity":1,"message":"166","line":11,"column":11,"nodeType":"142","messageId":"143","endLine":11,"endColumn":19},{"ruleId":"156","severity":1,"message":"167","line":41,"column":6,"nodeType":"158","endLine":41,"endColumn":8,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":63,"column":7,"nodeType":"171","endLine":63,"endColumn":50},{"ruleId":"140","severity":1,"message":"151","line":2,"column":47,"nodeType":"142","messageId":"143","endLine":2,"endColumn":56},{"ruleId":"140","severity":1,"message":"172","line":13,"column":19,"nodeType":"142","messageId":"143","endLine":13,"endColumn":29},{"ruleId":"140","severity":1,"message":"173","line":16,"column":29,"nodeType":"142","messageId":"143","endLine":16,"endColumn":42},{"ruleId":"140","severity":1,"message":"148","line":15,"column":11,"nodeType":"142","messageId":"143","endLine":15,"endColumn":22},{"ruleId":"140","severity":1,"message":"150","line":51,"column":13,"nodeType":"142","messageId":"143","endLine":51,"endColumn":19},"no-unused-vars","'useCreate' is defined but never used.","Identifier","unusedVar","no-native-reassign",["174"],"no-negated-in-lhs",["175"],"'currentUser' is assigned a value but never used.","'useRef' is defined but never used.","'docRef' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'showDescription' is assigned a value but never used.",["174"],["175"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'productOption' and 'setImageUrl'. Either include them or remove the dependency array.","ArrayExpression",["176"],"'storage' is defined but never used.","React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. If 'setProduct' needs the current value of 'product', you can also switch to useReducer instead of useState and read 'product' in the reducer.",["177"],"React Hook useEffect has a missing dependency: 'productForDeletion'. Either include it or remove the dependency array.",["178"],"'useContext' is defined but never used.","'imageUrl' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'type'. Either include it or remove the dependency array. If 'setUploadFile' needs the current value of 'type', you can also switch to useReducer instead of useState and read 'type' in the reducer.",["179"],"jsx-a11y/alt-text","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","JSXOpeningElement","'setLoading' is assigned a value but never used.","'setCategories' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [file, productOption, setImageUrl]",{"range":"188","text":"189"},"Update the dependencies array to be: [product]",{"range":"190","text":"191"},"Update the dependencies array to be: [product, productForDeletion]",{"range":"192","text":"193"},"Update the dependencies array to be: [type]",{"range":"194","text":"195"},[1394,1400],"[file, productOption, setImageUrl]",[245,247],"[product]",[703,712],"[product, productForDeletion]",[1174,1176],"[type]"]