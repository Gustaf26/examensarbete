[{"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\index.js":"1","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\App.js":"2","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\AuthRoute.js":"3","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Login.js":"4","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Home.js":"5","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Logout.js":"6","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\ForgotPassword.js":"7","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\NotFound.js":"8","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Navigation.js":"9","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Signup.js":"10","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\UpdateProfile.js":"11","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\contexts\\AuthContext.js":"12","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\firebase\\index.js":"13","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\Product.js":"14","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\CreateProduct.js":"15","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\Products.js":"16","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\ProductsGrid.js":"17","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useUploadImage.js":"18","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useDeleteProduct.js":"19","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\UploadImageDropzone.js":"20","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\contexts\\CreateContext.js":"21","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\AdminRoute.js":"22","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useProducts.js":"23","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\UpdateProduct.js":"24","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\SearchResults.js":"25"},{"size":365,"mtime":1608382491297,"results":"26","hashOfConfig":"27"},{"size":4640,"mtime":1609293768088,"results":"28","hashOfConfig":"27"},{"size":329,"mtime":1608265820219,"results":"29","hashOfConfig":"27"},{"size":3656,"mtime":1609289280530,"results":"30","hashOfConfig":"27"},{"size":1536,"mtime":1608389369985,"results":"31","hashOfConfig":"27"},{"size":754,"mtime":1607520182081,"results":"32","hashOfConfig":"27"},{"size":1659,"mtime":1607520182070,"results":"33","hashOfConfig":"27"},{"size":154,"mtime":1607354163657,"results":"34","hashOfConfig":"27"},{"size":4542,"mtime":1609190985442,"results":"35","hashOfConfig":"27"},{"size":2137,"mtime":1607354163659,"results":"36","hashOfConfig":"27"},{"size":3022,"mtime":1607520182090,"results":"37","hashOfConfig":"27"},{"size":2242,"mtime":1609342032449,"results":"38","hashOfConfig":"27"},{"size":923,"mtime":1607967406386,"results":"39","hashOfConfig":"27"},{"size":3941,"mtime":1609249802838,"results":"40","hashOfConfig":"27"},{"size":5822,"mtime":1608823678899,"results":"41","hashOfConfig":"27"},{"size":779,"mtime":1608389690990,"results":"42","hashOfConfig":"27"},{"size":3470,"mtime":1608823678911,"results":"43","hashOfConfig":"27"},{"size":1507,"mtime":1608212195266,"results":"44","hashOfConfig":"27"},{"size":769,"mtime":1608041882011,"results":"45","hashOfConfig":"27"},{"size":2548,"mtime":1608824613827,"results":"46","hashOfConfig":"27"},{"size":4077,"mtime":1609250923227,"results":"47","hashOfConfig":"27"},{"size":326,"mtime":1608266055615,"results":"48","hashOfConfig":"27"},{"size":836,"mtime":1608267577800,"results":"49","hashOfConfig":"27"},{"size":5454,"mtime":1609022377954,"results":"50","hashOfConfig":"27"},{"size":3918,"mtime":1608823678919,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"eltx4h",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\index.js",[],["109","110"],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\App.js",["111"],"import React, { useEffect } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport Product from \"./components/products/Product\";\r\nimport Products from \"./components/products/Products\";\r\nimport CreateProduct from \"./components/products/CreateProduct\";\r\nimport UpdateProduct from \"./components/products/UpdateProduct\";\r\nimport AuthRoute from \"./components/AuthRoute\";\r\nimport AdminRoute from \"./components/AdminRoute\";\r\nimport ForgotPassword from \"./components/ForgotPassword\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Login\";\r\nimport Logout from \"./components/Logout\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport SearchResults from \"./components/products/SearchResults\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Signup from \"./components/Signup\";\r\nimport UpdateProfile from \"./components/UpdateProfile\";\r\nimport AuthContextProvider from \"./contexts/AuthContext\";\r\nimport { useCreate } from \"./contexts/CreateContext\";\r\nimport \"./assets/scss/app.scss\";\r\n\r\nconst App = () => {\r\n  const { productCategories, setGlobalCategories } = useCreate();\r\n\r\n  useEffect(() => {\r\n    db.collection(\"cloth-categories\")\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        let snapshotCategories = [];\r\n        querySnapshot.forEach(function (doc) {\r\n          // doc.data() is never undefined for query doc snapshots\r\n          snapshotCategories.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        setGlobalCategories(snapshotCategories);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error getting documents: \", error);\r\n      });\r\n  }, []);\r\n\r\n  const showFooter = (e) => {\r\n    if (document.documentElement && document.documentElement.scrollTop > 200) {\r\n      document.getElementById(\"footer\").className = \"show\";\r\n    } else {\r\n      document.getElementById(\"footer\").className = \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", (e) => {\r\n      showFooter(e);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Router>\r\n      <AuthContextProvider>\r\n        <SimpleReactLightbox>\r\n          <Navigation />\r\n\r\n          <Container id=\"container\" className=\"py-3\">\r\n            <Routes>\r\n              <AuthRoute path=\"/\">\r\n                <Home />\r\n              </AuthRoute>\r\n              <AdminRoute path=\"/create\">\r\n                <CreateProduct />\r\n              </AdminRoute>\r\n              <AdminRoute path=\"/update\">\r\n                <UpdateProduct />\r\n              </AdminRoute>\r\n              <Route path=\"/search-results\">\r\n                <SearchResults />\r\n              </Route>\r\n              <Route path=\"/products\">\r\n                {productCategories &&\r\n                  productCategories.map((category) => (\r\n                    <Route path={`/${category.name}`} key={category.name}>\r\n                      <Products type={`${category.name}`} />\r\n                      <Route path=\"/:productId\">\r\n                        <Product />\r\n                      </Route>\r\n                    </Route>\r\n                  ))}\r\n              </Route>\r\n\r\n              <Route path=\"/forgot-password\">\r\n                <ForgotPassword />\r\n              </Route>\r\n\r\n              <Route path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n\r\n              <Route path=\"/logout\">\r\n                <Logout />\r\n              </Route>\r\n\r\n              <Route path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n\r\n              <AuthRoute path=\"/update-profile\">\r\n                <UpdateProfile />\r\n              </AuthRoute>\r\n\r\n              <Route path=\"*\" element={<NotFound />} />\r\n            </Routes>\r\n          </Container>\r\n          <footer id=\"footer\" className=\"p-3\">\r\n            <div>\r\n              This site has no commercial aims and is part of an academic\r\n              development-project.\r\n            </div>\r\n            <div>\r\n              Prices and articles are not intended to have a real correspondence\r\n              with same articles in other \"real websites\"\r\n            </div>\r\n            <div>\r\n              If you are interested in these articles we recommend you to visit{\" \"}\r\n              <a href=\"https://www.siteking.co.uk\">\r\n                https://www.siteking.co.uk/\r\n              </a>\r\n            </div>\r\n          </footer>\r\n        </SimpleReactLightbox>\r\n      </AuthContextProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\AuthRoute.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Login.js",["112"],"import firebaseLocalStorage from \"../firebase\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Row, Col, Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst Login = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const { login, checkIfAdmin } = useAuth();\r\n  const [adminChecked, setChecked] = useState(false);\r\n  const [alert, setAlert] = useState(false);\r\n  const [adminAlert, setAdminAlert] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setError(null);\r\n\r\n    try {\r\n      // try to log in the user with the specified credentials\r\n      setLoading(true);\r\n      if (adminChecked === true) {\r\n        const adminBoolean = checkIfAdmin(emailRef.current.value);\r\n        if (adminBoolean === false) {\r\n          setAlert(true);\r\n          setLoading(false);\r\n          return;\r\n        } else {\r\n          setAlert(false);\r\n        }\r\n      } else if (adminChecked === false) {\r\n        const adminBoolean = checkIfAdmin(emailRef.current.value);\r\n        if (adminBoolean === true) {\r\n          setAdminAlert(true);\r\n          setLoading(false);\r\n          return;\r\n        } else {\r\n          setAdminAlert(false);\r\n        }\r\n      }\r\n      await login(emailRef.current.value, passwordRef.current.value);\r\n      navigate(\"/\");\r\n    } catch (e) {\r\n      setError(\r\n        \"Could not log in. Please check your email address and your password.\"\r\n      );\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={{ span: 6, offset: 3 }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Log In</Card.Title>\r\n\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"email\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control type=\"email\" ref={emailRef} required />\r\n                </Form.Group>\r\n\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" ref={passwordRef} required />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"I am the administrator\"\r\n                    onChange={() => setChecked(!adminChecked)}\r\n                  />\r\n                </Form.Group>\r\n                <Button disabled={loading} type=\"submit\">\r\n                  Log In\r\n                </Button>\r\n              </Form>\r\n              {alert === true ? (\r\n                <Alert variant=\"danger\" className=\"mt-3\">\r\n                  You don´t have admin permissions\r\n                </Alert>\r\n              ) : null}\r\n\r\n              {adminAlert === true ? (\r\n                <Alert variant=\"warning\" className=\"mt-3\">\r\n                  You are admin. Please check the admin-box\r\n                </Alert>\r\n              ) : null}\r\n              <div className=\"text-center mt-3\">\r\n                <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n              <div className=\"text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Home.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Logout.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\ForgotPassword.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\NotFound.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Navigation.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\Signup.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\UpdateProfile.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\contexts\\AuthContext.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\firebase\\index.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\Product.js",["113"],"import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate, useParams, useLocation } from \"react-router-dom\";\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport { Card, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport { useCreate } from \"../../contexts/CreateContext\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { db } from \"../../firebase\";\r\n//import UploadProductImage from \"./UploadProductImage\";\r\n\r\nconst Product = () => {\r\n  const {\r\n    singleProduct,\r\n    productOption,\r\n    setSingleProduct,\r\n    setLocation,\r\n    setProdId,\r\n  } = useCreate();\r\n  const { admin } = useAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { productId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (!singleProduct) {\r\n      setLocation(location.pathname);\r\n      setProdId(productId);\r\n    }\r\n  }, []);\r\n\r\n  const handleUpdateProduct = (product) => {\r\n    setSingleProduct(product);\r\n    navigate(`/update`);\r\n  };\r\n\r\n  const handleDeleteProduct = (product) => {\r\n    try {\r\n      const deletion = async () => {\r\n        console.log(\"ddeleteing \" + product.name + \"of\" + productOption);\r\n\r\n        db.collection(`${productOption}`).doc(`${product.id}`).delete();\r\n\r\n        setTimeout(() => {\r\n          navigate(`/products/${productOption}`);\r\n        }, 1000);\r\n      };\r\n\r\n      deletion();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb className=\"mb-3\">\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/\">Home</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>\r\n          {productOption && (\r\n            <Link to={`/products/${productOption}`}>{productOption}</Link>\r\n          )}\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item active>\r\n          {singleProduct ? singleProduct.name : null}\r\n        </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      {!singleProduct && <BounceLoader color={\"#888\"} size={20} />}\r\n      {singleProduct && (\r\n        <Card className=\"mb-3 col-6 mx-auto\">\r\n          <h2 className=\"mb-3 mt-3 col-12 d-flex justify-content-center\">\r\n            {\" \"}\r\n            {singleProduct && singleProduct.name}\r\n          </h2>\r\n          <p\r\n            href={singleProduct.thumbnail}\r\n            title=\"View image in lightbox\"\r\n            data-attribute=\"SRL\"\r\n          >\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={singleProduct.thumbnail}\r\n              title={singleProduct.name}\r\n            />\r\n          </p>\r\n          <Card.Body>\r\n            <Card.Text className=\"text-muted small\">\r\n              <b>{singleProduct.name}</b>\r\n            </Card.Text>\r\n            <Card.Text className=\"text-muted small\">\r\n              <b>Price: </b> {singleProduct.price} €\r\n            </Card.Text>\r\n            <Card.Text className=\"text-muted small\">\r\n              <b>Description: </b>{\" \"}\r\n              <span>\r\n                {singleProduct.description &&\r\n                  singleProduct.description.slice(0, 30)}\r\n                ... <b>(Read more)</b>\r\n              </span>\r\n            </Card.Text>\r\n            {admin && (\r\n              <div>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  size=\"sm\"\r\n                  className=\"col-12 mt-3 p-2\"\r\n                  onClick={() => {\r\n                    handleDeleteProduct(singleProduct);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  size=\"sm\"\r\n                  className=\"col-12 mt-3 p-2\"\r\n                  onClick={() => {\r\n                    handleUpdateProduct(singleProduct);\r\n                  }}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\CreateProduct.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\Products.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\ProductsGrid.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useUploadImage.js",["114"],"import { useState, useEffect } from \"react\";\r\nimport { storage } from \"../firebase\";\r\nimport { useCreate } from \"../contexts/CreateContext\";\r\n\r\nconst useUploadImage = ({ file }) => {\r\n  const [uploadProgress, setUploadProgress] = useState(null);\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const { setImageUrl, productOption } = useCreate();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      setUploadProgress(null);\r\n      setUploadedImage(null);\r\n      setError(null);\r\n      setIsSuccess(false);\r\n\r\n      return;\r\n    }\r\n\r\n    // reset environment\r\n    setError(null);\r\n    setIsSuccess(false);\r\n\r\n    // get file reference\r\n    const fileRef = storage.ref(`${productOption}/${file.name}`);\r\n\r\n    // upload file to fileRef\r\n    const uploadTask = fileRef.put(file);\r\n\r\n    // attach listener for `state_changed`-event\r\n    uploadTask.on(\"state_changed\", (taskSnapshot) => {\r\n      setUploadProgress(\r\n        Math.round(\r\n          (taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100\r\n        )\r\n      );\r\n    });\r\n\r\n    // are we there yet?\r\n    uploadTask.then((snapshot) => {\r\n      // retrieve URL to uploaded file\r\n      snapshot.ref.getDownloadURL().then((url) => {\r\n        // add uploaded file to db\r\n        setImageUrl(url);\r\n      });\r\n    });\r\n  }, [file]);\r\n\r\n  return { uploadProgress, uploadedImage, error, isSuccess };\r\n};\r\n\r\nexport default useUploadImage;\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useDeleteProduct.js",["115","116","117"],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\UploadImageDropzone.js",["118"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport ProgressBar from \"react-bootstrap/esm/ProgressBar\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport useUploadImage from \"../../hooks/useUploadImage\";\r\n\r\nconst UploadImageDropzone = ({ type }) => {\r\n  const [uploadFile, setUploadFile] = useState({ file: \"\", type: \"\" });\r\n  const [message, setMessage] = useState(null);\r\n  const { uploadProgress, error, isSuccess } = useUploadImage(uploadFile);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      setMessage({\r\n        error: true,\r\n        text: error,\r\n      });\r\n    } else if (isSuccess) {\r\n      setMessage({\r\n        success: true,\r\n        text: \"Image successfully uploaded!\",\r\n      });\r\n    } else {\r\n      setMessage(null);\r\n    }\r\n  }, [error, isSuccess]);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setMessage(null);\r\n\r\n    if (acceptedFiles.length === 0) {\r\n      return;\r\n    }\r\n\r\n    setUploadFile({\r\n      file: acceptedFiles[0],\r\n      type: type,\r\n    });\r\n  }, []);\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    acceptedFiles,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    accept: \"image/gif, image/jpeg, image/png\",\r\n    onDrop,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      id=\"upload-image-dropzone-wrapper\"\r\n      className={`text-center px-4 py-3 my-3 ${\r\n        isDragAccept ? `drag-accept` : ``\r\n      } ${isDragReject ? `drag-reject` : ``}`}\r\n    >\r\n      <input type=\"image\" alt=\"drop-input for your file\" {...getInputProps()} />\r\n      {isDragActive ? (\r\n        isDragAccept ? (\r\n          <p>Drop image</p>\r\n        ) : (\r\n          <p>File not allowed</p>\r\n        )\r\n      ) : (\r\n        <p>Drop here product picture</p>\r\n      )}\r\n      {acceptedFiles && (\r\n        <div className=\"accepted-files mt-2\">\r\n          <ul className=\"list-unstyled\">\r\n            {acceptedFiles.map((file) => (\r\n              <li key={file.name}>\r\n                {file.name} ({Math.round(file.size / 1024)} kb)\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {/* Output upload status */}\r\n      {uploadProgress !== null && uploadProgress !== 100 && (\r\n        <ProgressBar variant=\"success\" animated now={uploadProgress} />\r\n      )}\r\n\r\n      {message && (\r\n        <Alert variant={message.error ? \"warning\" : \"success\"}>\r\n          {message.text}\r\n        </Alert>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImageDropzone;\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\contexts\\CreateContext.js",["119","120","121","122","123","124"],"import { useRef } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { BounceLoader } from \"react-spinners\";\r\n\r\nconst CreateContext = createContext();\r\n\r\nconst useCreate = () => {\r\n  return useContext(CreateContext);\r\n};\r\n\r\nconst CreateContextProvider = (props) => {\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [productOption, setProductOption] = useState(null);\r\n  const [singleProduct, setSingleProduct] = useState(\"\");\r\n  const [productCategories, setGlobalCategories] = useState([]);\r\n  const allProducts = useRef([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [prodId, setProdId] = useState(\"\");\r\n\r\n  const getSingleProduct = () => {\r\n    const firstDash = location.indexOf(\"/\");\r\n    const secondDash = location.lastIndexOf(\"/\");\r\n    const semiPath = location.slice(firstDash, secondDash);\r\n    const category = semiPath.replace(\"/products/\", \"\");\r\n\r\n    let preliminaryProd = allProducts.current.filter(\r\n      (prod) => prod.id === Number(prodId) && prod.category === category\r\n    );\r\n    if (preliminaryProd.length) {\r\n      setProductOption(category);\r\n      setSingleProduct(preliminaryProd[0]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    allProducts.current = [];\r\n\r\n    productCategories.map((category) => {\r\n      let snapshotProducts = [];\r\n\r\n      db.collection(`${category.name}`).onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          snapshotProducts.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        let emptyArr;\r\n        emptyArr = [...snapshotProducts];\r\n        console.log(emptyArr);\r\n\r\n        if (emptyArr.length > 1) {\r\n          emptyArr.map((product) => {\r\n            allProducts.current.map((prod, index) => {\r\n              //DeLeting stale data from allProducts\r\n              if (\r\n                product.category &&\r\n                prod.category.toLowerCase() === product.category.toLowerCase()\r\n              ) {\r\n                allProducts.current.splice(index, 1);\r\n              }\r\n\r\n              if (prod.name === product.name) {\r\n                allProducts.current.splice(index, 1);\r\n              }\r\n            });\r\n          });\r\n        }\r\n\r\n        allProducts.current.push(...emptyArr);\r\n\r\n        if (prodId) {\r\n          getSingleProduct();\r\n        }\r\n\r\n        snapshotProducts = [];\r\n      });\r\n    });\r\n    return () => {\r\n      allProducts.current = [];\r\n    };\r\n  }, [productCategories, prodId]);\r\n\r\n  useEffect(() => {\r\n    if (allProducts && searchString !== \"\") {\r\n      allProducts.current.map((product) => {\r\n        if (\r\n          (product.name &&\r\n            product.name.toLowerCase().includes(searchString.toLowerCase())) ||\r\n          (product.description &&\r\n            product.description\r\n              .toLowerCase()\r\n              .includes(searchString.toLowerCase())) ||\r\n          (product.category &&\r\n            product.category.toLowerCase().includes(searchString.toLowerCase()))\r\n        ) {\r\n          setSearchResults((prevProds) => [...prevProds, product]);\r\n        }\r\n      });\r\n    }\r\n  }, [searchString]);\r\n\r\n  const contextValues = {\r\n    setImageUrl,\r\n    imageUrl,\r\n    setProductOption,\r\n    productOption,\r\n    setSingleProduct,\r\n    singleProduct,\r\n    productCategories,\r\n    setGlobalCategories,\r\n    setSearchString,\r\n    allProducts,\r\n    searchResults,\r\n    setSearchResults,\r\n    getSingleProduct,\r\n    setProdId,\r\n    setLocation,\r\n  };\r\n\r\n  return (\r\n    <CreateContext.Provider value={contextValues}>\r\n      {loading && (\r\n        <div className=\"d-flex justify-content-center my-5\">\r\n          <BounceLoader color={\"#888\"} size={100} />\r\n        </div>\r\n      )}\r\n      {!loading && props.children}\r\n    </CreateContext.Provider>\r\n  );\r\n};\r\n\r\nexport { CreateContext, useCreate, CreateContextProvider as default };\r\n","C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\AdminRoute.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\hooks\\useProducts.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\UpdateProduct.js",[],"C:\\Users\\gcs26\\Documents\\examensarbete\\e-handel\\src\\components\\products\\SearchResults.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":45,"column":6,"nodeType":"131","endLine":45,"endColumn":8,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":28},{"ruleId":"129","severity":1,"message":"137","line":28,"column":6,"nodeType":"131","endLine":28,"endColumn":8,"suggestions":"138"},{"ruleId":"129","severity":1,"message":"139","line":49,"column":6,"nodeType":"131","endLine":49,"endColumn":12,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"141","line":2,"column":14,"nodeType":"135","messageId":"136","endLine":2,"endColumn":21},{"ruleId":"129","severity":1,"message":"142","line":9,"column":6,"nodeType":"131","endLine":9,"endColumn":8,"suggestions":"143"},{"ruleId":"129","severity":1,"message":"144","line":30,"column":6,"nodeType":"131","endLine":30,"endColumn":15,"suggestions":"145"},{"ruleId":"129","severity":1,"message":"146","line":39,"column":6,"nodeType":"131","endLine":39,"endColumn":8,"suggestions":"147"},{"ruleId":"133","severity":1,"message":"148","line":14,"column":19,"nodeType":"135","messageId":"136","endLine":14,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":42,"column":38,"nodeType":"151","messageId":"152","endLine":42,"endColumn":40},{"ruleId":"149","severity":1,"message":"150","line":57,"column":34,"nodeType":"151","messageId":"152","endLine":57,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":58,"column":51,"nodeType":"151","messageId":"152","endLine":58,"endColumn":53},{"ruleId":"129","severity":1,"message":"153","line":86,"column":6,"nodeType":"131","endLine":86,"endColumn":33,"suggestions":"154"},{"ruleId":"149","severity":1,"message":"150","line":90,"column":41,"nodeType":"151","messageId":"152","endLine":90,"endColumn":43},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setGlobalCategories'. Either include it or remove the dependency array.","ArrayExpression",["157"],"no-unused-vars","'firebaseLocalStorage' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'location.pathname', 'productId', 'setLocation', 'setProdId', and 'singleProduct'. Either include them or remove the dependency array.",["158"],"React Hook useEffect has missing dependencies: 'productOption' and 'setImageUrl'. Either include them or remove the dependency array.",["159"],"'storage' is defined but never used.","React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array. If 'setProduct' needs the current value of 'product', you can also switch to useReducer instead of useState and read 'product' in the reducer.",["160"],"React Hook useEffect has a missing dependency: 'productForDeletion'. Either include it or remove the dependency array.",["161"],"React Hook useCallback has a missing dependency: 'type'. Either include it or remove the dependency array. If 'setUploadFile' needs the current value of 'type', you can also switch to useReducer instead of useState and read 'type' in the reducer.",["162"],"'setLoading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getSingleProduct'. Either include it or remove the dependency array.",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [setGlobalCategories]",{"range":"178","text":"179"},"Update the dependencies array to be: [location.pathname, productId, setLocation, setProdId, singleProduct]",{"range":"180","text":"181"},"Update the dependencies array to be: [file, productOption, setImageUrl]",{"range":"182","text":"183"},"Update the dependencies array to be: [product]",{"range":"184","text":"185"},"Update the dependencies array to be: [product, productForDeletion]",{"range":"186","text":"187"},"Update the dependencies array to be: [type]",{"range":"188","text":"189"},"Update the dependencies array to be: [productCategories, prodId, getSingleProduct]",{"range":"190","text":"191"},[1838,1840],"[setGlobalCategories]",[866,868],"[location.pathname, productId, setLocation, setProdId, singleProduct]",[1394,1400],"[file, productOption, setImageUrl]",[245,247],"[product]",[703,712],"[product, productForDeletion]",[1066,1068],"[type]",[2680,2707],"[productCategories, prodId, getSingleProduct]"]